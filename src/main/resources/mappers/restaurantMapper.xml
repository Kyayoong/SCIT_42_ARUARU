<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.restaurantreservation.aruaru.dao.RestaurantDao">
	<!-- 식당 조회 -->
	<select id="selectOne" resultType="Restaurant_member"
		parameterType="String">
		SELECT
		*
		FROM
		restaurant_member
		WHERE
		member_id = #{member_id}
	</select>

	<select id="selectOne1" resultType="Restaurant_member"
		parameterType="int">
		SELECT
		*
		FROM
		restaurant_member
		WHERE
		restaurant_num = #{restaurant_num}
	</select>

	<!-- 식당등록 -->
	<insert id="regist1" parameterType="Restaurant_member">
		INSERT INTO restaurant_member
		(restaurant_num
		, member_id
		, restaurant_name
		, restaurant_sectors
		, restaurant_comment
		, restaurant_phone
		, restaurant_address1
		, restaurant_address2
		)
		VALUES
		(restaurant_member_seq.nextval
		, #{member_id}
		, #{restaurant_name}
		, #{restaurant_sectors}
		, #{restaurant_comment}
		, #{restaurant_phone}
		, #{restaurant_address1}
		, #{restaurant_address2}
		)
	</insert>
	<!-- 식당 파일 등록 -->
	<insert id="fileregist" parameterType="Restaurant_file">
		INSERT INTO restaurant_file
		(restaurant_file_num
		, restaurant_originalfile
		, restaurant_savedfile
		, restaurant_num
		)
		VALUES
		(restaurant_file_seq.nextval
		, #{restaurant_originalfile}
		, #{restaurant_savedfile}
		, #{restaurant_num}
		)
	</insert>
	<!-- 식당파일조회 -->
	<select id="fileselect" resultType="Restaurant_file"
		parameterType="int">
		SELECT
		*
		FROM
		Restaurant_file
		WHERE
		restaurant_num = #{restaurant_num}
	</select>
	<!-- 메뉴 등록 -->
	<insert id="insertmenu" parameterType="Menu">
		INSERT INTO menu
		(menu_num
		, menu_name
		, restaurant_num
		, menu_price
		, menu_originalfile
		, menu_savedfile
		, menu_content
		, menu_suggestion
		)
		VALUES
		(menu_seq.nextval
		, #{menu_name}
		, #{restaurant_num}
		, #{menu_price}
		, #{menu_originalfile}
		, #{menu_savedfile}
		, #{menu_content}
		, #{menu_suggestion}
		)
	</insert>

	<!-- 메뉴 조회 -->
	<select id="menucheck" parameterType="int" resultType="Menu">
		SELECT
		*
		FROM
		menu
		WHERE
		restaurant_num = #{restaurant_num}
	</select>
	<!-- 메뉴 읽어오기 -->
	<select id="readMenu" parameterType="int" resultType="Menu">
		SELECT
		*
		FROM
		menu
		WHERE
		menu_num = #{menu_num}
	</select>
	<!-- 메뉴 삭제 -->
	<delete id="menuDel" parameterType="int">
		DELETE
		FROM
		menu
		WHERE
		menu_num = #{menu_num}
	</delete>

	<!-- 식당맴버 평균가격 업데이트 -->
	<update id="Rupdate" parameterType="Restaurant_member">
		UPDATE
		restaurant_member
		SET
		menu_priceavr = #{menu_priceavr}
		WHERE
		restaurant_num = #{restaurant_num}
	</update>

	<!-- 전체 태그 섹터로 분류 -->
	<select id="tagList" parameterType="String" resultType="Tags">
		SELECT
		tags_num
		, tags_name
		, restaurant_num
		, tags_sector
		FROM
		tags
		<if test="searchWord != null">
			WHERE
			tags_sector like '%' || #{searchWord} || '%'
		</if>
		AND
		restaurant_num = 0
		order by tags_num desc
	</select>
	<!-- 저장된 태그 가져오기 -->
	<select id="tagRead" parameterType="int" resultType="Tags">
		SELECT
		tags_name
		, tags_sector
		FROM
		tags
		WHERE
		tags_num = #{tags_num}

	</select>
	<!-- 태그 저장 -->
	<insert id="tagInsert" parameterType="Tags">
		INSERT INTO tags
		(tags_num
		, tags_name
		, restaurant_num
		, tags_sector
		)
		VALUES
		(tags_seq.nextval
		, #{tags_name}
		, #{restaurant_num}
		, #{tags_sector}
		)
	</insert>
	<!-- 태그 삭제 -->
	<delete id="tagDelete" parameterType="Tags">
		DELETE
		FROM
		tags
		WHERE
		restaurant_num = #{restaurant_num}
		AND
		tags_name = #{tags_name}
	</delete>
	
	<!-- 휴무일 가져오기 -->
	<select id="readHoliday" resultType="Holiday">
		SELECT
		*
		FROM
		holiday
		WHERE
		restaurant_num IS NULL
	</select>
	
	<!-- 식당 리스트 가쟈오기 -->
	<select id="resList" resultType="Restaurant_member">
		SELECT
		*
		FROM
		Restaurant_member
		WHERE
		certification = 1
	</select>
	
	<!-- 영업일 가져오기 -->
	<select id="readTime" parameterType="Int" resultType="Restaurant_time">
		SELECT
		*
		FROM
		restaurant_time
		where
		restaurant_num = #{restaurant_num}
	</select>
	
	<!-- 가게 태그 가져오기 -->
	<select id="searchStoreTags" parameterType="Int" resultType="Tags">
		SELECT
		*
		FROM
		tags
		where
		restaurant_num = #{restaurant_num}
	</select>
	
	<!-- 검색기능 -->
	<select id="resListSearch" parameterType="map" resultType="Restaurant_member">
		SELECT
		*
		FROM
		Restaurant_member
		WHERE
		certification = 1
		<if test="s_address == '' and s_tags == '' and s_people == '' and s_sector != ''">
		AND restaurant_sectors like '%' || #{s_sector} || '%'
		</if>
		<if test="s_address != '' and s_tags == '' and s_people == '' and s_sector == ''">
		AND restaurant_address1 like '%' || #{s_address} || '%'
		</if>
		<if test="s_address == '' and s_tags != '' and s_people == '' and s_sector == ''">
		AND restaurant_num IN 
		(SELECT
		a.restaurant_num
		FROM
		restaurant_member a,
		tags b
		WHERE
		b.tags_name like '%' || #{s_tags} || '%'
		AND
		a.restaurant_num = b.restaurant_num)
		</if>
		<if test="s_address != '' and s_tags != '' and s_people == '' and s_sector == ''">
		AND restaurant_address1 like '%' || #{s_address} || '%'
		AND
		restaurant_num IN 
		(SELECT
		a.restaurant_num
		FROM
		restaurant_member a,
		tags b
		WHERE
		b.tags_name like '%' || #{s_tags} || '%'
		AND
		a.restaurant_num = b.restaurant_num)
		</if>
	</select>
	
	<select id="readFile" parameterType="int" resultType="Restaurant_file">
		SELECT
		*
		FROM
		Restaurant_file
		WHERE
		restaurant_file_num = #{restaurant_file_num}
	</select>
	
	<insert id="reservationInsert" parameterType="Reservation">
		INSERT INTO reservation
		(reservation_num
		, member_id
		, restaurant_num
		, restaurant_name
		, reservation_people
		, reservation_date
		, reservation_hours
		, request
		)
		VALUES
		(reservation_seq.nextval
		, #{member_id}
		, #{restaurant_num}
		, #{restaurant_name}
		, #{reservation_people}
		, #{reservation_date}
		, #{reservation_hours}
		, #{request}
		)
	</insert>
	
	<update id="peopleCount" parameterType="Restaurant_member">
		UPDATE
		restaurant_member
		SET
		restaurant_people = #{restaurant_people}
		WHERE
		restaurant_num = #{restaurant_num}
	</update>
	
	<select id="ReservationList" parameterType="int"
		resultType="Reservation">
		SELECT
		member_id
		, reservation_num
		, restaurant_name
		, reservation_people
		, to_char(registration_date, 'YYYY-MM-DD') registration_date
		, to_char(reservation_date, 'YYYY-MM-DD') reservation_date
		, reservation_hours
		, request
		, reservation_success
		FROM
		reservation
		WHERE
		restaurant_num = #{restaurant_num}
		and
		reservation_success = 0
		ORDER BY
		reservation_num DESC
	</select>
	
	<select id="restCheck" parameterType="map" resultType="int">
	SELECT
	COUNT(*)
	FROM
	restaurant_member
	WHERE
	restaurant_name = #{restaurant_name} AND restaurant_address1 = #{restaurant_address1}
	</select>
	
	<select id="reservationSelect" parameterType="int" resultType="Reservation">
	SELECT
	*
	FROM
	reservation
	WHERE
	reservation_num = #{reservation_num}
	</select>
	<update id="reservationUpdate" parameterType="int">
	UPDATE
	reservation
	SET
	reservation_success = 1
	WHERE
	reservation_num = #{reservation_num}
	</update>
	<delete id="reservationDelete" parameterType="int">
	DELETE
	FROM
	reservation
	WHERE
	reservation_num = #{reservation_num}
	</delete>
	<insert id="usageInsert" parameterType="Usage_history">
	INSERT INTO
	usage_history
	(usage_num
	,reservation_num
	,usage_information
	,member_id
	,restaurant_num
	,restaurant_name)
	VALUES
	(usage_history_seq.nextval
	,#{reservation_num}
	,#{usage_information}
	,#{member_id}
	,#{restaurant_num}
	,#{restaurant_name}
	)
	</insert>
	<insert id="zzimAdd" parameterType="Restaurant_zzim">
	INSERT INTO
	restaurant_zzim
	(member_num
	,restaurant_num)
	VALUES
	(#{member_num}
	#{restaurant_num}
	)
	</insert>
	<delete id="zzimDelete" parameterType="int">
	DELETE
	FROM
	restaurant_zzim
	WHERE
	restaurant_num = #{restaurant_num}
	</delete>
</mapper>