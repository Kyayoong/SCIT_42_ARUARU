<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.restaurantreservation.aruaru.dao.UserDao">
	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="User_member">
		INSERT INTO user_member
		(member_num
		, member_id
		, member_pw
		, member_birth
		, member_name
		, member_phone
		, member_email
		, member_tags
		,
		member_address1
		, member_address2
		, member_gender
		, member_nickname
		<if test="member_originalfile != null and member_savedfile != null">
			, member_originalfile
			, member_savedfile
		</if>
		<if test="member_originalfile == null and member_savedfile == null">
			, member_originalfile
			, member_savedfile
		</if>
		)
		VALUES
		(user_member_seq.nextval
		, #{member_id}
		, #{member_pw}
		,
		#{member_birth}
		, #{member_name}
		, #{member_phone}
		, #{member_email}
		,
		#{member_tags}
		, #{member_address1}
		, #{member_address2}
		,
		#{member_gender}
		, #{member_nickname}
		<if test="member_originalfile != null and member_savedfile != null">
			, #{member_originalfile}
			, #{member_savedfile}
		</if>
		<if test="member_originalfile == null and member_savedfile == null">
			, 'user_icon.png' 
			, 'user_icon.png'
		</if>
		)
	</insert>

	<select id="selectOne" parameterType="string"
		resultType="User_member">
		SELECT * from user_member
		WHERE member_id = #{member_id}
	</select>

	<select id="findID" parameterType="String" resultType="String">
		SELECT
		member_id
		WHERE member_name = #{member_name}
	</select>

	<!-- 개인정보수정 -->
	<update id="updateUser" parameterType="User_member">
		UPDATE user_member
		SET
		member_pw = #{member_pw},
		member_name =
		#{member_name},
		member_nickname
		= #{member_nickname},
		member_email =
		#{member_email},

		member_phone =
		#{member_phone},
		member_address1 =
		#{member_address1},
		member_address2 =
		#{member_address2},
		member_birth =
		#{member_birth},
		member_tags =
		#{member_tags}
		<if test="member_originalfile != null and member_savedfile != null">
			, member_originalfile = #{member_originalfile}
			,
			member_savedfile = #{member_savedfile}
		</if>
		WHERE member_id = #{member_id}
	</update>

	<!-- 회원탈퇴 -->
	<delete id="deleteUser" parameterType="String">
		DELETE user_member
		WHERE
		member_id = #{member_id}
	</delete>

	<select id="findBoardById" parameterType="String"
		resultType="Web_board">
		SELECT
		*
		FROM
		Web_board
		WHERE
		member_id = #{member_id}
		order by
		board_num
		desc
	</select>

	<insert id="insertBoard" parameterType="Web_board">
		INSERT INTO
		web_board
		(
		board_num
		, member_id
		, board_title
		, board_contents
		, category
		<if test="board_originalfile != null and board_savedfile != null">
		, board_originalfile
		, board_savedfile
		</if>
		)
		VALUES
		(
		web_board_seq.nextval
		, #{member_id}
		, #{board_title}
		, #{board_contents}
		, #{category}
		<if test="board_originalfile != null and board_savedfile != null">
		, #{board_originalfile}
		, #{board_savedfile}
		</if>
		)
	</insert>

	<select id="findBoard" parameterType="Int"
		resultType="Web_board">
		SELECT
		*
		FROM
		web_board
		WHERE
		board_num
		= #{board_num}
	</select>


	<!-- 예약 내역 조회 -->
	<select id="seeAllReservation" parameterType="String"
		resultType="Reservation">
		SELECT
		reservation_num
		, member_id
		, restaurant_name
		, reservation_people
		,
		to_char(registration_date, 'YYYY-MM-DD') registration_date
		,
		to_char(reservation_date, 'YYYY-MM-DD') reservation_date
		,
		reservation_hours
		, request
		, reservation_success
		FROM
		reservation
		WHERE
		member_id = #{member_id} AND
		reservation_success BETWEEN 0 AND 1 AND
		reservation_date &gt; SYSDATE
	</select>

	<!-- 지난 예약 내역 조회 -->
	<select id="seeAllLastReservation" parameterType="String"
		resultType="Reservation">
		SELECT
		member_id
		, restaurant_name
		, reservation_people
		,
		to_char(registration_date, 'YYYY-MM-DD') registration_date
		,
		to_char(reservation_date, 'YYYY-MM-DD') reservation_date
		,
		reservation_hours
		, request
		, reservation_success
		FROM
		reservation
		WHERE
		member_id = #{member_id} AND
		reservation_date &lt; SYSDATE
	</select>


	<select id="readReply" parameterType="Int"
		resultType="Web_reply">
		SELECT
		*
		FROM
		web_reply
		WHERE
		board_num
		= #{board_num}
		ORDER BY
		reply_num
	</select>




	<update id="updateBoard" parameterType="Web_board">
	UPDATE
	web_board
	SET
	board_title = #{board_title}
	, board_contents = #{board_title}
	, category = #{category}
	<if test="board_originalfile != null and board_savedfile != null">
	, board_originalfile = #{board_originalfile}
	, board_savedfile = #{board_savedfile}
	</if>
	WHERE
	board_num = #{board_num}
	</update>



	<!-- 이용내역 리스트 불러오기 + reservation_success 1인거만 가져오는거 아닌가요..?-->
	<select id="selectAllUsageHistory" parameterType="String"
		resultType="Usage_history">
		SELECT * FROM USAGE_HISTORY WHERE MEMBER_ID=#{username}
	</select>
	<!-- 특정 이용내역 받아오기 -->
	<select id="selectOneUsageHistory" parameterType="int" resultType="Usage_history">
		SELECT * FROM USAGE_HISTORY WHERE USAGE_NUM = #{usageNum}
	</select>
	<!-- 리뷰 객체 넣기 -->
	<insert id="insertReview" parameterType="Review">
		INSERT INTO REVIEW
		(REVIEW_NUM, MEMBER_ID, RESTAURANT_NUM, USAGE_NUM, TITLE, CONTENTS, GRADE)
		VALUES
		(REVIEW_SEQ.NEXTVAL, #{member_id}, #{restaurant_num}, #{usage_num}, #{title}, #{contents}, #{grade})
	</insert>
	
	<delete id="deleteBoard" parameterType="Int">
		DELETE FROM 
		Web_board
		WHERE
		board_num
		= #{board_num}
	</delete> 
	<!-- 유저아이디로 리뷰 리스트 가져오기 -->
	<select id="selectAllReview" parameterType="String" resultType="Review">
		SELECT * FROM REVIEW WHERE MEMBER_ID = #{username}
	</select>
	
	<select id="myTags" parameterType="String" resultType="String">
		SELECT
		member_tags
		FROM
		user_member
		where
		member_id
		=#{member_id}
	</select>
	
	<select id="recommend" parameterType="String" resultType="Int">
		SELECT
		restaurant_num
		FROM
		tags
		WHERE tags_name like
		<foreach collection="arg0" item="item" separator="or tags_name like">
		'%'||#{item}||'%'
		</foreach>
	</select> 
	
	<select id="recommendStores" parameterType="Integer" resultType="Restaurant_member">
		SELECT
		*
		FROM
		restaurant_member 
		WHERE
		restaurant_num =
		<foreach collection="arg0" item="item1" separator = "or restaurant_num = " >
		#{item1} 
		</foreach>
	</select>
</mapper>
